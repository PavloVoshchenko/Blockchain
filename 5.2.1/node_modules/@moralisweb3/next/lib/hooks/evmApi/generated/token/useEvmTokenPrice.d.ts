import { GetTokenPriceRequest } from 'moralis/common-evm-utils';
import { FetchParams } from '../../../types';
export declare const useEvmTokenPrice: (request?: GetTokenPriceRequest, fetchParams?: FetchParams) => {
    data: {
        nativePrice: import("@moralisweb3/common-evm-utils").EvmNative | null;
        exchangeAddress: import("@moralisweb3/common-evm-utils").EvmAddress | null;
        tokenName?: string | undefined;
        tokenSymbol?: string | undefined;
        tokenLogo?: string | undefined;
        tokenDecimals?: string | undefined;
        usdPrice: number;
        exchangeName?: string | undefined;
        tokenAddress?: string | undefined;
    } | undefined;
    error: any;
    fetch: (params?: GetTokenPriceRequest | undefined) => Promise<{
        nativePrice: import("@moralisweb3/common-evm-utils").EvmNative | null;
        exchangeAddress: import("@moralisweb3/common-evm-utils").EvmAddress | null;
        tokenName?: string | undefined;
        tokenSymbol?: string | undefined;
        tokenLogo?: string | undefined;
        tokenDecimals?: string | undefined;
        usdPrice: number;
        exchangeName?: string | undefined;
        tokenAddress?: string | undefined;
    } | undefined>;
    /**
     * @deprecated use `fetch()` instead
     */
    refetch: () => Promise<{
        nativePrice: import("@moralisweb3/common-evm-utils").EvmNative | null;
        exchangeAddress: import("@moralisweb3/common-evm-utils").EvmAddress | null;
        tokenName?: string | undefined;
        tokenSymbol?: string | undefined;
        tokenLogo?: string | undefined;
        tokenDecimals?: string | undefined;
        usdPrice: number;
        exchangeName?: string | undefined;
        tokenAddress?: string | undefined;
    } | undefined>;
    isFetching: boolean;
    /**
     * @deprecated use `isFetching` instead
     */
    isValidating: boolean;
};
//# sourceMappingURL=useEvmTokenPrice.d.ts.map